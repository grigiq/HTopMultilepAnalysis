#!/usr/bin/env python

import glob, os, sys, subprocess, shutil, string, argparse

parser = argparse.ArgumentParser(description="Wrapper script for xAH_run.py. This gets called on the PBS worker node via the PBS script generated by submit-PBS-ARRAY-HTopMultilepMiniNTupMaker.py. The sample to be processed gets retrieved via the PBS_ARRAYID index.")

parser.add_argument("--inputpath", dest="inputpath", action="store", type=str)
parser.add_argument("--outputpath", dest="outputpath", action="store", type=str)
parser.add_argument("--samplelist", dest="samplelist", action="store", type=str, nargs="+")
parser.add_argument("--config", dest="config", action="store", default=None, type=str)
parser.add_argument("--treename", dest="treename", action="store", default="nominal", type=str)
parser.add_argument("--nevents", dest="nevents", action="store", default="0", type=str)

args = parser.parse_args()

if __name__ == '__main__':

    # Read samplelist from argparse.
    # It will automagically re-create a python list from the multiple arguments of the input --samplelist option.

    samplelist = args.samplelist

    # Get the sample from the PBS_ARRAYID

    pbs_array_idx = int(os.getenv('PBS_ARRAYID'))

    sample = samplelist[pbs_array_idx]

    print("Current job index PBS_ARRAYID={0}, sample={1}".format(pbs_array_idx,sample))

    if sample[0:2] == "00":
        append = "Data"
    else:
        append = "Nominal"
        #append = "ttbar_ttgamma/Nominal"

    infile    =  args.inputpath + "/" + append + "/" + sample + "/" + sample + ".root"
    submitdir = sample

    rootcoredir = os.getenv('PWD') + "/RootCoreBin/bin/x86_64-slc6-gcc49-opt/"
    xAH = rootcoredir + "/" + "xAH_run.py"

    config   = args.config
    treename = args.treename
    nevents  = args.nevents

    # OK, execute xAH_run.py for this sample!

    subprocess.call( ['python',xAH,'-vv','--files',infile,'--config',config,'--submitDir',submitdir,'--treeName',treename,'--nevents',nevents,'--force','direct'] )

    # Now apply weight to output tree

    weightTrees = os.getenv('PWD') + "/HTopMultilepAnalysis/scripts/weightTrees-PBS.py"
    outputpath  = args.outputpath

    subprocess.call( ['python',weightTrees,outputpath,sample] )

