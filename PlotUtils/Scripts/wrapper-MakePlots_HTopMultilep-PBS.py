#!/usr/bin/env python

import glob, os, sys, subprocess, shutil, string, argparse

parser = argparse.ArgumentParser(description="Wrapper script for MakePlots_HTopMultilep.py. This gets called on the PBS worker node via the PBS script generated by submit-PBS-ARRAY-MakePlots_HTopMultilep.py. The variable to be plotted gets retrieved via the PBS_ARRAYID index.")

parser.add_argument("optstr", dest="optstr", action="store", type=str)
parser.add_argument("--varlist", dest="varlist", action="store", type=str, nargs="+")
parser.add_argument("--outputpath", dest="outputpath", action="store", type=str)

args = parser.parse_args()

if __name__ == '__main__':

    # Read varlist from argparse.
    # It will automagically re-create a python list from the multiple arguments of the input --varlist option.

    varlist = args.varlist

    # Get the var from the PBS_ARRAYID

    pbs_array_idx = int(os.getenv('PBS_ARRAYID'))

    var = varlist[pbs_array_idx]

    print("Current job index PBS_ARRAYID={0}, var={1}".format(pbs_array_idx,var))

    plotscript = os.getenv('PWD') + "/HTopMultilepAnalysis/PlotUtils/Plotter/MakePlots_HTopMultilep.py"

    optstr = args.optstr

    # OK, execute plotting script for this var!

    subprocess.call( ['python',plotscript,optstr,'--submitPBSVar',var] )

    # Now move the output to the target directory

    outputpath  = args.outputpath
    if not outputpath[-1] == '/':
        outputpath += '/'

    # Get all subdirs in current location whose name starts with "OutputPlots_", rsync them to output directory, and remove the local copy

    job_outdirs = [ dir for dir in os.listdir(".") if "OutputPlots_" in dir and os.path.isdir(dir)  ]

    for dir in job_outdirs:
        thisdir = dir
        if thisdir[-1] == '/':
            thisdir = thisdir[:-1]
        subprocess.call( ['rsync','-azP',thisdir,outputpath] )
        shutil.rmtree(thisdir)
